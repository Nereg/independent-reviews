# Code generated by sqlc. DO NOT EDIT.
# versions:
#   sqlc v1.27.0
#   sqlc-gen-better-python v0.3.1
from __future__ import annotations

__all__: typing.Sequence[str] = (
    "Faculty",
    "Lector",
    "Permission",
    "Practitioner",
    "Review",
    "Subject",
    "Telegram",
    "User",
)

import dataclasses
import datetime
import typing


@dataclasses.dataclass()
class Faculty:
    id: int
    university: str
    name: str


@dataclasses.dataclass()
class Lector:
    id: int
    aisid: typing.Optional[int]
    name: str
    surname: str


@dataclasses.dataclass()
class Permission:
    userId: int
    permissions: int


@dataclasses.dataclass()
class Practitioner:
    id: int
    aisid: typing.Optional[int]
    name: str
    surname: str


@dataclasses.dataclass()
class Review:
    id: int
    author: int
    text: str
    deleted: bool
    language: str
    subjectId: int
    lectorId: typing.Optional[int]
    practitionerId: int
    subjectRating: int
    lectorRating: typing.Optional[int]
    practitionerRating: int
    practitionerReview: typing.Optional[str]
    lectorReview: typing.Optional[str]
    yearBeginning: int
    timestamp: datetime.datetime
    mark: typing.Optional[int]


@dataclasses.dataclass()
class Subject:
    id: int
    name: str
    facultyId: int
    aisid: int
    stage: int
    semester: int
    aisCode: str


@dataclasses.dataclass()
class Telegram:
    telegramId: int
    userId: int
    chatId: int


@dataclasses.dataclass()
class User:
    id: int
    aisId: typing.Optional[int]
    facultyId: typing.Optional[int]
    eduEmail: typing.Optional[str]
    ISICNum: typing.Optional[int]
    registred: datetime.datetime
